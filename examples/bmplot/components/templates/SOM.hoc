begintemplate LTS_Cell
	public soma, dend, type, Vinit, insert_mechs
	create soma[1], dend[2]
	strdef type

	public noise, noiseRandObj
	objref noise, noiseRandObj
	public all, somatic, basal, apical, axonal
	objref all, somatic, basal, apical, axonal
    
    proc init() {
		type = "LTS_Cell"
		
		/////// parameters ///////
		Vinit = -70 // initial potential
		RaAll = 150 //200
		Cm_soma = 1.3 //1 //2.5
		Cm_dend = 1.3

		eleak = -70 //-60
		gleak = 6.7e-05 // 6e-05
		gnat = 0.08 //0.08 //0.06
		gkdr = 0.026 //0.04 //0.065 //0.03 //0.015
		gnap = 0.0011 // 0.0014 //0.0022 //0.0022 //0.0013 //0.0009 //0.00065
		gim  = 0.00015 //0.0015 //0.005 //0.007 //0.00501 //0005 //0.007 //0.009

		/////// sections ///////
		all = new SectionList()
		somatic = new SectionList()
		basal = new SectionList()
		apical = new SectionList()
		axonal = new SectionList()

		soma[0] all.append()
		soma[0] somatic.append()
		dend[0] all.append()
		dend[0] basal.append()
		dend[1] all.append()
		dend[1] basal.append()

		/////// topology ////////
		connect dend[0](0), soma[0](0)
		connect dend[1](0), soma[0](1)

		/////// geometry ////////
		// dendrites along z axis
		Lsoma = 20.0
		Ldend = 250.0
		soma[0] {
			diam = 10.0 nseg = 1
			pt3dadd(0,0,-Lsoma/2,diam)
			pt3dadd(0,0,Lsoma/2,diam)
		}
		dend[0] {
			diam = 3 nseg = 1
			pt3dadd(0,0,0,diam)
			pt3dadd(0,0,-Ldend,diam)
		}
		dend[1] {
			diam = 3 nseg = 1
			pt3dadd(0,0,0,diam)
			pt3dadd(0,0,Ldend,diam)
		}

		/////// biophysics //////
		forall {
			Ra = RaAll
			insert leak
			el_leak = eleak
			glbar_leak = gleak
			insert natCA3
			gbar_natCA3 = gnat
			insert napCA3
			gbar_napCA3 = gnap
			insert kdrCA3
			gbar_kdrCA3 = gkdr
			insert imCA3
			gbar_imCA3 = gim

			ena = 45
			ek = -80
			v = Vinit // initial potential
		}

		soma[0] cm = Cm_soma
		for i = 0, 1 dend[i] {
			cm = Cm_dend
		}

		define_shape() // builtin fcn: fill in 3d info for sections defined by only L and diam, translate 3d points for consistency with their connections
	}

	proc insert_mechs(){
		randseed = $1
		soma[0]{
			noiseRandObj=new Random()
			noiseRandObj.Random123(randseed)
			noiseRandObj.normal(0,1)

			noise = new Gfluct(0.5)
			noise.g_e0 = 0.000121//TB7/31/21
			noise.g_i0 = 0.00573
			noise.std_e = 0.000012
			noise.std_i = 0.00264

			noise.setRandObj(noiseRandObj)
		}
	}
endtemplate LTS_Cell

