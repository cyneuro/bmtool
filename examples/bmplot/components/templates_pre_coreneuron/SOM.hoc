begintemplate SOM_Cell
	public NumSoma,NumDend,insert_mechs
	NumSoma = 1
	NumDend = 2
	

	Rm = 80000
	Cm = 2.4 // 1.8 // 2 //1
	RaAll= 150//200
	RaSoma= 150 // 146.969697
	RaDend = 150
	Vpas = -60
	v_init = -60

	public soma, dend
	create soma[NumSoma]
	create dend[NumDend]
	
        objref noise_exc, noise_inh
        objref noiseRandObj_exc, noiseRandObj_inh
	public all, somatic, basal, apical, axonal,connect2target,drv,append_sections
	objref all, somatic, basal, apical, axonal,drv
    public synlist,conduclist
	objref synlist,conduclist                        
	objref this

    objref tlist, area_vec
	public tlist, area_vec
    
    external tstop
    
    proc init() {
        //append_sections()
        synlist =new List()	
        conduclist = new List()
		tlist = new List()
    	area_vec = new Vector()                   

		//Parameters.
		gnat = 0.08 //0.08 //0.06
		ghd = 0 //1.0e-5 //1.0e-5
		gkdr = 0.026 //0.04 //0.065 //0.03 //0.015
		gsahp = 0 //0.0006 //0.001 //0.005 
		gnap = 0.0014 //0.0022 //0.0022 //0.0013 //0.0009 //0.00065
		gcal = 0 //0.017 //0.005 //0.017 //0.017 

		gim  = 0.0015 //0.005 //0.007 //0.00501 //0005 //0.007 //0.009
		gcas = 0 //0.003 //0.0005 //0.0005 //0.0005

		all = new SectionList()
		somatic = new SectionList()
		basal = new SectionList()
		apical = new SectionList()
		axonal = new SectionList()

		v_init = -60

		for i=0,NumSoma soma[i] {
			all.append()
			somatic.append()
		} 
		for i=0,NumDend dend[i] {
			all.append()
			basal.append()
		}
		

		//create soma, dend, dendb
		connect dend[0](0), soma[0](0)
		connect dend[1](0), soma[0](1)

	soma[0] {
			nseg = 1
			L = 20 // (micrometer)
			diam = 10 // (micrometer)
	    	}
		
		dend[0] {
			nseg = 1
			L = 250 // (micrometer)
			diam = 3 // (micrometer)
			}
			
		dend[1] {
			nseg = 1
			L = 250 // (micrometer)
			diam = 3 // (micrometer)
			}
	
		soma[0]{
			insert leakCA3 
			el_leakCA3 = -60
			glbar_leakCA3 = 6e-5 
			Ra = 150 
			cm = 1 // 2.5
			
			insert capoolCA3
			
			insert calCA3
			gcalbar_calCA3 = gcal

			insert natCA3  
			gbar_natCA3 = gnat

			insert napCA3//0.0
			gbar_napCA3 = gnap 

			insert hdCA3 
			ghdbar_hdCA3 = ghd
			
			insert kdrCA3 
			gbar_kdrCA3 = gkdr
		
			insert sAHPCA3
			gsAHPbar_sAHPCA3 = gsahp

			insert imCA3
			gbar_imCA3 = gim

			insert cass
			gbar_cass = gcas
            
            insert xtraimemrec

            drv = new IClamp(0.5)
            drv.del = 0
            drv.dur = tstop
            drv.amp = 0.0//0.2  //nA            

			ena=45  ek=-80  ehd=-45  eca = 134		
		}
				
		dend[0] {
			insert capoolCA3
			
			insert calCA3
			gcalbar_calCA3 = gcal

			insert leakCA3 
			el_leakCA3 = -60  
			glbar_leakCA3 = 6e-5 
			Ra = 150 
			cm = 1.3
			
			insert natCA3  
			gbar_natCA3 = gnat

			insert napCA3
			gbar_napCA3 = gnap 

			insert hdCA3 
			ghdbar_hdCA3 = ghd
			
			insert kdrCA3 
			gbar_kdrCA3 = gkdr
			
			insert sAHPCA3
			gsAHPbar_sAHPCA3 = gsahp

			insert imCA3
			gbar_imCA3 = gim

			insert cass
			gbar_cass = gcas
            
            insert xtraimemrec

			ena=45  ek=-80  ehd=-45  eca = 134
		}
								
		dend[1] {
			insert capoolCA3

			insert calCA3
			gcalbar_calCA3 = gcal

			insert leakCA3 
			el_leakCA3 = -60 
			glbar_leakCA3 = 6e-5 
			Ra = 150 
			cm = 1.3 // 2.5
			
			insert natCA3  
			gbar_natCA3 = gnat

			insert napCA3
			gbar_napCA3 = gnap 

			insert hdCA3 
			ghdbar_hdCA3 =ghd 
			
			insert kdrCA3 
			gbar_kdrCA3 = gkdr

			insert sAHPCA3
			gsAHPbar_sAHPCA3 = gsahp

			insert imCA3
			gbar_imCA3 = gim

			insert cass
			gbar_cass = gcas
            
            insert xtraimemrec
            
			ena=45  ek=-80  ehd=-45  eca = 134
		}
		
		define_shape()
		forall {
			insert extracellular
				
			for (x, 0) {
				setpointer im_xtraimemrec(x), i_membrane(x)
				setpointer ex_xtraimemrec(x), e_extracellular(x)
				tlist.append(new Vector())
				//int_tlist.append(new Vector()) //now int_tlist is necessarily the same length as tlist
				area_vec.append(area(x)) // area_vec.x(i) is area of tlist.o(i)
				//print area(x)
				//tlist.o(tlist.count()-1).record(&i_membrane(x),1)
				tlist.o(tlist.count()-1).record(&er_xtraimemrec(x),1)	
			}
		}
 }   

proc insert_mechs(){
                r = $1
                soma[0]{
                        noiseRandObj_exc=new Random()
                        noiseRandObj_exc.Random123(123)
                        noiseRandObj_exc.normal(0,1)

                        noise_exc = new Gfluct2_exc(0.5)

                        noise_exc.g_e0 = 0.0032//TB7/31/21
                        noise_exc.g_i0 = 0
                        noise_exc.std_e = 0.003
                        noise_exc.std_i = 0

                        //noise_exc.g_e0 = 0.0032//0.0032
                        //noise_exc.std_e = 0.003//0.003
                        noise_exc.setRandObj(noiseRandObj_exc)

                        noiseRandObj_inh=new Random()
                        noiseRandObj_inh.Random123(123)
                        noiseRandObj_inh.normal(0,1)

                        noise_inh = new Gfluct2_inh(0.5)

                        noise_inh.g_e0 = 0
                        noise_inh.g_i0 = 0.021
                        noise_inh.std_e = 0
                        noise_inh.std_i = 0.008

                        //noise_inh.g_e0 = 0.021
                        //noise_inh.std_e = 0.008
                        noise_inh.setRandObj(noiseRandObj_inh)
                }
}

objref all
proc append_sections() { local i
	
	all = new SectionList()
	soma[0] all.append()
	dend[0] all.append()
	dend[1] all.append()
	
}  
                                   
    obfunc connect2target() { localobj nc
	soma nc = new NetCon(&v(0.5), $o1)
	nc.threshold = 0
	if (numarg() == 2) ($o2 = nc)
	return nc
	}                                       
endtemplate SOM_Cell



begintemplate CR_Cell
	public NumSoma,NumDend,insert_mechs
	NumSoma = 1
	NumDend = 2
	

	Rm = 80000
	Cm = 2.4 // 1.8 // 2 //1
	RaAll= 150//200
	RaSoma= 150 // 146.969697
	RaDend = 150
	Vpas = -60
	v_init = -60

	public soma, dend
	create soma[NumSoma]
	create dend[NumDend]

        objref noise_exc, noise_inh
        objref noiseRandObj_exc, noiseRandObj_inh	

	public all, somatic, basal, apical, axonal,connect2target,drv,append_sections
	objref all, somatic, basal, apical, axonal,drv
    public synlist,conduclist
	objref synlist,conduclist                        
	objref this

    objref tlist, area_vec
	public tlist, area_vec
    
    external tstop
    
    proc init() {
        //append_sections()
        synlist =new List()	
        conduclist = new List()
		tlist = new List()
    	area_vec = new Vector()                   

		//Parameters.
		gnat = 0.09 //0.08 //0.06
		ghd = 0 //1.0e-5 //1.0e-5
		gkdr = 0.03 //0.04 //0.065 //0.03 //0.015
		gsahp = 0.0006 //0.0006 //0.001 //0.005 
		gnap = 0.0014 //0.0022 //0.0022 //0.0013 //0.0009 //0.00065
		gcal = 0.02 //0.017 //0.005 //0.017 //0.017 

		gim  = 0.0015 //0.005 //0.007 //0.00501 //0005 //0.007 //0.009
		gcas = 0 //0.003 //0.0005 //0.0005 //0.0005

		all = new SectionList()
		somatic = new SectionList()
		basal = new SectionList()
		apical = new SectionList()
		axonal = new SectionList()

		v_init = -60

		for i=0,NumSoma soma[i] {
			all.append()
			somatic.append()
		} 
		for i=0,NumDend dend[i] {
			all.append()
			basal.append()
		}
		

		//create soma, dend, dendb
		connect dend[0](0), soma[0](0)
		connect dend[1](0), soma[0](1)

	soma[0] {
			nseg = 1
			L = 20 // (micrometer)
			diam = 10 // (micrometer)
	    	}
		
		dend[0] {
			nseg = 1
			L = 250 // (micrometer)
			diam = 3 // (micrometer)
			}
			
		dend[1] {
			nseg = 1
			L = 250 // (micrometer)
			diam = 3 // (micrometer)
			}
	
		soma[0]{
			insert leakCA3 
			el_leakCA3 = -60
			glbar_leakCA3 = 6e-5 
			Ra = 150 
			cm = 1 // 2.5
			
			insert capoolCA3
			
			insert calCA3
			gcalbar_calCA3 = gcal

			insert natCA3  
			gbar_natCA3 = gnat

			insert napCA3//0.0
			gbar_napCA3 = gnap 

			insert hdCA3 
			ghdbar_hdCA3 = ghd
			
			insert kdrCA3 
			gbar_kdrCA3 = gkdr
		
			insert sAHPCA3
			gsAHPbar_sAHPCA3 = gsahp

			insert imCA3
			gbar_imCA3 = gim

			insert cass
			gbar_cass = gcas
            
            insert xtraimemrec

            drv = new IClamp(0.5)
            drv.del = 0
            drv.dur = tstop
            drv.amp = 0.0//0.2  //nA            

			ena=45  ek=-80  ehd=-45  eca = 134		
		}
				
		dend[0] {
			insert capoolCA3
			
			insert calCA3
			gcalbar_calCA3 = gcal

			insert leakCA3 
			el_leakCA3 = -60  
			glbar_leakCA3 = 6e-5 
			Ra = 150 
			cm = 1.3
			
			insert natCA3  
			gbar_natCA3 = gnat

			insert napCA3
			gbar_napCA3 = gnap 

			insert hdCA3 
			ghdbar_hdCA3 = ghd
			
			insert kdrCA3 
			gbar_kdrCA3 = gkdr
			
			insert sAHPCA3
			gsAHPbar_sAHPCA3 = gsahp

			insert imCA3
			gbar_imCA3 = gim

			insert cass
			gbar_cass = gcas
            
            insert xtraimemrec

			ena=45  ek=-80  ehd=-45  eca = 134
		}
								
		dend[1] {
			insert capoolCA3

			insert calCA3
			gcalbar_calCA3 = gcal

			insert leakCA3 
			el_leakCA3 = -60 
			glbar_leakCA3 = 6e-5 
			Ra = 150 
			cm = 1.3 // 2.5
			
			insert natCA3  
			gbar_natCA3 = gnat

			insert napCA3
			gbar_napCA3 = gnap 

			insert hdCA3 
			ghdbar_hdCA3 =ghd 
			
			insert kdrCA3 
			gbar_kdrCA3 = gkdr

			insert sAHPCA3
			gsAHPbar_sAHPCA3 = gsahp

			insert imCA3
			gbar_imCA3 = gim

			insert cass
			gbar_cass = gcas
            
            insert xtraimemrec
            
			ena=45  ek=-80  ehd=-45  eca = 134
		}
		
		define_shape()
		forall {
			insert extracellular
				
			for (x, 0) {
				setpointer im_xtraimemrec(x), i_membrane(x)
				setpointer ex_xtraimemrec(x), e_extracellular(x)
				tlist.append(new Vector())
				//int_tlist.append(new Vector()) //now int_tlist is necessarily the same length as tlist
				area_vec.append(area(x)) // area_vec.x(i) is area of tlist.o(i)
				//print area(x)
				//tlist.o(tlist.count()-1).record(&i_membrane(x),1)
				tlist.o(tlist.count()-1).record(&er_xtraimemrec(x),1)	
			}
		}
 }   

proc insert_mechs(){
                r = $1
                soma[0]{
                        noiseRandObj_exc=new Random()
                        noiseRandObj_exc.Random123(123)
                        noiseRandObj_exc.normal(0,1)

                        noise_exc = new Gfluct2_exc(0.5)

                        noise_exc.g_e0 = 0.0032//TB7/31/21
                        noise_exc.g_i0 = 0
                        noise_exc.std_e = 0.003
                        noise_exc.std_i = 0

                        //noise_exc.g_e0 = 0.0032//0.0032
                        //noise_exc.std_e = 0.003//0.003
                        noise_exc.setRandObj(noiseRandObj_exc)

                        noiseRandObj_inh=new Random()
                        noiseRandObj_inh.Random123(123)
                        noiseRandObj_inh.normal(0,1)

                        noise_inh = new Gfluct2_inh(0.5)

                        noise_inh.g_e0 = 0
                        noise_inh.g_i0 = 0.021
                        noise_inh.std_e = 0
                        noise_inh.std_i = 0.008

                        //noise_inh.g_e0 = 0.021
                        //noise_inh.std_e = 0.008
                        noise_inh.setRandObj(noiseRandObj_inh)
                }
}

objref all
proc append_sections() { local i
	
	all = new SectionList()
	soma[0] all.append()
	dend[0] all.append()
	dend[1] all.append()
	
}  
                                   
    obfunc connect2target() { localobj nc
	soma nc = new NetCon(&v(0.5), $o1)
	nc.threshold = 0
	if (numarg() == 2) ($o2 = nc)
	return nc
	}                                       
endtemplate CR_Cell
